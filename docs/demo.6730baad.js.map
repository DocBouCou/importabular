{"version":3,"sources":["../src/index.js","demo.js"],"names":["Importabular","data","node","options","LooseArray","onChange","onSelectionChange","contentStyle","cellStyle","minHeight","maxHeight","Infinity","minWidth","maxWidth","fillScrollPaneWithCells","separatorColor","border","background","width","height","padding","margin","e","editing","preventDefault","rows","parsePasteEvent","selection","rx","ry","offset","x","y","forEach","row","val","setVal","changeSelectedCellsStyle","selectionStart","selectionEnd","length","onDataChanged","asArr","getSelectionAsArray","clipboardData","setData","arrToHTML","map","join","copy","setAllSelectedCellsTo","ctrlKey","key","revertEdit","stopEditing","moveCursor","shiftKey","startEditing","getCell","firstChild","value","mobile","tbody","style","userSelect","getCoords","selecting","endSelection","lastMouseUp","Date","now","lastMouseUpTarget","target","moved","td","input","removeEventListener","blurIfEnter","removeChild","renderTDContent","keyCode","status","getStatus","cell","Object","assign","TDStyle","div","tagName","innerText","getVal","restyle","parent","setupDom","replaceDataWithArray","incrementToFit","fillScrollSpace","Math","ceil","iframe","contentWindow","innerHeight","cols","innerWidth","toArr","clear","refreshDisplayedValue","document","createElement","setAttribute","toString","innerHTML","appendChild","cwd","open","write","close","iframeStyle","body","iframeBodyStyle","table","borderSpacing","fontSize","fontFamily","borderCollapse","tr","addCell","events","name","addEventListener","destroyEditing","parentElement","fitBounds","Array","prototype","call","children","incrementWidth","incrementHeight","result","push","forSelectionCoord","shiftSelectionEnd","curr","nc","srollIntoView","scrollIntoView","behavior","block","tdSize","getBoundingClientRect","cellSize","type","focus","callback","oldS","getSelectionCoords","reverse","cb","selected","onlySelected","editTarget","borderStyle","borderWidth","borderColor","boxSizing","cleanStyle","arguments","font","lineHeight","color","getAttribute","parseInt","line","selectedCount","hash","cleanedVal","cleanVal","isEmpty","max","obj","keys","arr","outerHTML","event","html","window","getData","trs","querySelectorAll","tds","text","ensureDimensions","split","s","getElementById"],"mappings":"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","file":"demo.6730baad.js","sourceRoot":"../demo","sourcesContent":["export default class Importabular {\n  parent = null\n  width = 1\n  height = 1\n  data = new LooseArray()\n  options = {\n    onChange: null,\n    onSelectionChange: null,\n    contentStyle: () => null,\n    cellStyle: () => null,\n    minHeight: 1,\n    maxHeight: Infinity,\n    minWidth: 1,\n    maxWidth: Infinity,\n    fillScrollPaneWithCells:true,\n    separatorColor:'#ddd',\n  }\n\n  fitBounds({x, y}) {\n    return x >= 0 && x < this.options.maxWidth\n      && y >= 0 && y < this.options.maxHeight\n  }\n\n  constructor({data = [], node, ...options}) {\n    this.parent = node\n    Object.assign(this.options, options)\n    this.setupDom()\n    this.replaceDataWithArray(data)\n    this.incrementToFit({x: this.options.minWidth - 1, y: this.options.minHeight - 1})\n    this.fillScrollSpace()\n  }\n  fillScrollSpace(){\n    if(!this.options.fillScrollPaneWithCells) return\n    const rows=Math.ceil(this.iframe.contentWindow.innerHeight/40)\n    const cols=Math.ceil(this.iframe.contentWindow.innerWidth/100)\n    this.incrementToFit({x: cols - 1, y: rows - 1})\n  }\n\n  onDataChanged() {\n    if (this.options.onChange) {\n      this.options.onChange(this.data.toArr())\n    }\n  }\n\n  setData(data) {\n    this.data.clear()\n    data.forEach((row, y) =>\n      row.forEach((val, x) =>\n        this.setVal(x, y, val)\n      ))\n    for (let x = 0; x < this.width; x++)\n      for (let y = 0; y < this.height; y++)\n        this.refreshDisplayedValue({x, y})\n\n  }\n\n  renderTDContent(td, x, y) {\n    const div = document.createElement('div')\n    td.setAttribute('x', x.toString())\n    td.setAttribute('y', y.toString())\n    const val = this.getVal(x, y)\n    if (val) {\n      div.innerText = val;\n    } else {\n      // Force no collapse of cell\n      div.innerHTML = '&nbsp;'\n    }\n    td.appendChild(div)\n    this.restyle({x, y})\n\n  }\n\n  iframeStyle = {\n    border: 'none',\n    background: 'transparent',\n    width: '100%',\n    height: '500px'\n  }\n  iframeBodyStyle = {\n    padding: 0, margin: 0\n  }\n\n  setupDom() {\n    // We wrap the table in an iframe mostly to let the browser\n    // handle the focus for us, without the need for a hidden\n    // input. It also makes sure that the style of the table is \"clean\"\n    // but makes it harder to style the content.\n    const iframe = document.createElement('iframe');\n    this.iframe = iframe\n    this.parent.appendChild(iframe)\n    const cwd = iframe.contentWindow.document\n    this.cwd = cwd\n    cwd.open();\n    cwd.write(`<html><body><style>\n    html{\n      -ms-overflow-style: none;\n      scrollbar-width: none;\n    }\n    ::-webkit-scrollbar {\n        visibility: hidden;\n    }\n    </style></body></html>`);\n    cwd.close();\n    Object.assign(iframe.style, this.iframeStyle)\n    Object.assign(cwd.body.style, this.iframeBodyStyle)\n\n    const table = document.createElement('table')\n    const tbody = document.createElement('tbody')\n    Object.assign(table.style, {\n      borderSpacing: 0,\n      background: 'white',\n      border: '1px solid'+this.options.separatorColor,\n      fontSize: '16px',\n      fontFamily: 'sans-serif',\n      borderCollapse: 'separate',\n    })\n\n\n    table.appendChild(tbody)\n    cwd.body.appendChild(table)\n    this.tbody = tbody\n    this.table = table\n\n    for (let y = 0; y < this.height; y++) {\n      const tr = document.createElement('tr')\n      tbody.appendChild(tr)\n      for (let x = 0; x < this.width; x++) {\n        this.addCell(tr, x, y)\n      }\n    }\n\n    this.events.forEach(name =>\n      cwd.addEventListener(name, this[name], true)\n    )\n  }\n\n  events = ['mousedown', 'mouseenter', 'mouseup', 'mouseleave', 'touchstart',\n    'touchend', 'touchmove', 'keydown', 'paste', 'cut', 'copy'\n  ]\n\n  destroy() {\n    this.destroyEditing()\n\n    this.events.forEach(name =>\n      this.cwd.removeEventListener(name, this[name], true)\n    )\n\n    this.iframe.parentElement.removeChild(this.iframe)\n  }\n\n\n  addCell(tr, x, y) {\n    const td = document.createElement('td')\n    tr.appendChild(td)\n    this.renderTDContent(td, x, y)\n  }\n\n  incrementHeight() {\n\n    if (!this.fitBounds({x:0,y:this.height})) return false\n    this.height++\n    const y = this.height - 1\n    const tr = document.createElement('tr')\n\n    this.tbody.appendChild(tr)\n    for (let x = 0; x < this.width; x++) {\n      this.addCell(tr, x, y)\n    }\n    return true\n  }\n\n  incrementWidth() {\n\n    if (!this.fitBounds({x:this.width, y:0})) return false\n    this.width++\n    const x = this.width - 1\n    Array.prototype.forEach.call(this.tbody.children, (tr, y) => {\n      this.addCell(tr, x, y)\n    })\n    return true\n  }\n\n  incrementToFit({x, y}) {\n    while (x > this.width - 1 && this.incrementWidth());\n    while (y > this.height - 1 && this.incrementHeight());\n  }\n\n  paste = e => {\n    if (this.editing) return\n    e.preventDefault();\n    const rows = parsePasteEvent(e)\n    const {rx, ry} = this.selection\n    const offset = {x: rx[0], y: ry[0]}\n\n    rows.forEach((row, y) => {\n      row.forEach((val, x) => {\n        this.setVal(offset.x + x, offset.y + y, val)\n      })\n    })\n\n    this.changeSelectedCellsStyle(() => {\n      this.selectionStart = offset\n      this.selectionEnd = {\n        x: offset.x + rows[0].length - 1,\n        y: offset.y + rows.length - 1\n      }\n    })\n    this.onDataChanged()\n  }\n\n  getSelectionAsArray() {\n    const {rx, ry} = this.selection\n    if (rx[0] === rx[1]) return null\n    const width = rx[1] - rx[0]\n    const height = ry[1] - ry[0]\n    const result = []\n    for (let y = 0; y < height; y++) {\n      result.push([])\n      for (let x = 0; x < width; x++) {\n        result[y].push(this.getVal(rx[0] + x, ry[0] + y))\n      }\n    }\n    return result\n  }\n\n  copy = e => {\n    const asArr = this.getSelectionAsArray()\n    if (asArr) {\n      e.preventDefault()\n      e.clipboardData.setData('text/html', arrToHTML(asArr));\n      e.clipboardData.setData('text/plain', asArr.map(row => row.join('\\t')).join('\\n'));\n    }\n  }\n\n  cut = e => {\n    this.copy(e)\n    this.setAllSelectedCellsTo('')\n  }\n\n  keydown = e => {\n\n    if (e.ctrlKey) return\n\n    if (this.selectionStart) {\n      if (e.key === 'Escape' && this.editing) {\n        e.preventDefault()\n        this.revertEdit()\n        this.stopEditing()\n      }\n      if (e.key === 'Enter') {\n        e.preventDefault()\n        this.moveCursor({y: 1})\n      }\n\n      if (e.key === 'Tab') {\n        e.preventDefault()\n        this.moveCursor({x: e.shiftKey ? -1 : 1})\n      }\n      if (!this.editing) {\n\n        if (e.key === 'Delete' || e.key === 'Backspace') {\n          e.preventDefault()\n          this.setAllSelectedCellsTo('')\n        }\n        if (e.key === 'ArrowDown') {\n          e.preventDefault()\n          this.moveCursor({y: 1}, e.shiftKey)\n        }\n\n        if (e.key === 'ArrowUp') {\n          e.preventDefault()\n          this.moveCursor({y: -1}, e.shiftKey)\n        }\n        if (e.key === 'ArrowLeft') {\n          e.preventDefault()\n          this.moveCursor({x: -1}, e.shiftKey)\n        }\n        if (e.key === 'ArrowRight') {\n          e.preventDefault()\n          this.moveCursor({x: +1}, e.shiftKey)\n        }\n      }\n\n\n      if (e.key.length === 1 && !this.editing) {\n        this.changeSelectedCellsStyle(() => {\n          const {x, y} = this.selectionStart\n          // We clear the value of the cell, and the keyup event will\n          // happen with the cursor inside the cell and type the character there\n          this.startEditing({x, y})\n          this.getCell(x, y).firstChild.value = ''\n        })\n      }\n    }\n  }\n\n  setAllSelectedCellsTo(value) {\n    this.forSelectionCoord(this.selection, ({x, y}) => this.setVal(x, y, value))\n    this.forSelectionCoord(this.selection, this.refreshDisplayedValue)\n\n    this.onDataChanged()\n  }\n\n  moveCursor({x = 0, y = 0}, shiftSelectionEnd) {\n    const curr = shiftSelectionEnd ? this.selectionEnd : this.selectionStart\n    const nc = {x: curr.x + x, y: curr.y + y}\n    if (!this.fitBounds(nc)) return\n    this.stopEditing()\n    this.incrementToFit(nc)\n    this.changeSelectedCellsStyle(() => {\n      if (shiftSelectionEnd) {\n        this.selectionEnd = nc\n      } else {\n        this.selectionStart = this.selectionEnd = nc\n      }\n    })\n    this.srollIntoView(nc)\n  }\n  srollIntoView({x,y}){\n    this.getCell(x, y).scrollIntoView({behavior:'smooth', block:'nearest'})\n  }\n\n  selecting = false;\n  selectionStart = null\n  selectionEnd = null\n  selection = {rx: [0, 0], ry: [0, 0]}\n  editing = null\n\n  mousedown = e => {\n\n    if (this.mobile) return\n    this.changeSelectedCellsStyle(() => {\n      this.tbody.style.userSelect = 'none'\n      this.selectionStart = this.getCoords(e);\n      this.selectionEnd = this.selectionStart\n      this.selecting = true;\n    })\n  }\n  mouseenter = e => {\n    if (this.mobile) return\n    if (this.selecting) {\n      this.changeSelectedCellsStyle(() => {\n        this.selectionEnd = this.getCoords(e);\n      })\n    }\n  }\n\n  lastMouseUp = null\n  lastMouseUpTarget = null\n\n  endSelection() {\n    this.selecting = false;\n    this.tbody.style.userSelect = ''\n  }\n\n  mouseup = e => {\n\n    if (this.mobile) return\n    if (this.selecting) {\n      this.changeSelectedCellsStyle(() => {\n        this.selectionEnd = this.getCoords(e);\n        this.endSelection()\n\n        if (this.lastMouseUp &&\n          this.lastMouseUp > Date.now() - 300 &&\n          this.lastMouseUpTarget.x === this.selectionEnd.x &&\n          this.lastMouseUpTarget.y === this.selectionEnd.y\n        ) {\n          this.startEditing(this.selectionEnd)\n        }\n        this.lastMouseUp = Date.now()\n        this.lastMouseUpTarget = this.selectionEnd\n      })\n    }\n  }\n  mouseleave = e => {\n    if(e.target===this.tbody && this.selecting) {\n      this.endSelection()\n    }\n  }\n\n  touchstart = e => {\n    if (this.editing) return\n    this.mobile = true\n    this.moved = false\n  }\n  touchend = e => {\n    if (!this.mobile) return\n    if (this.editing) return\n    if (!this.moved) {\n\n      this.changeSelectedCellsStyle(() => {\n        this.selectionEnd = this.selectionStart = this.getCoords(e);\n      })\n      this.startEditing(this.selectionEnd)\n    }\n  }\n  touchmove = e => {\n    if (!this.mobile) return\n    this.moved = true\n  }\n\n  startEditing({x, y}) {\n\n    this.editing = {x, y}\n    const td = this.getCell(x, y)\n    const tdSize = td.getBoundingClientRect()\n    const cellSize = td.firstChild.getBoundingClientRect()\n    Object.assign(td.style, {\n      width: tdSize.width,\n      height: tdSize.height,\n    })\n\n    td.removeChild(td.firstChild)\n    const input = document.createElement('input');\n    input.type = 'text'\n    input.value = this.getVal(x, y)\n\n    Object.assign(input.style, {\n      width: cellSize.width,\n      height: cellSize.height,\n    })\n    td.appendChild(input)\n    input.focus()\n    input.addEventListener('blur', this.stopEditing)\n    input.addEventListener('keydown', this.blurIfEnter)\n  }\n\n  destroyEditing() {\n    if (this.editing) {\n      const {x, y} = this.editing\n      const input = this.getCell(x, y).firstChild\n      input.removeEventListener('blur', this.stopEditing)\n      input.removeEventListener('keydown', this.blurIfEnter)\n    }\n  }\n\n  revertEdit() {\n    if (!this.editing) return\n    const {x, y} = this.editing\n    const td = this.getCell(x, y)\n    const input = td.firstChild\n    input.value = this.getVal(x, y)\n  }\n\n  stopEditing = () => {\n    if (!this.editing) return\n    const {x, y} = this.editing\n    const td = this.getCell(x, y)\n    td.style.width = ''\n    td.style.height = ''\n    const input = td.firstChild\n    input.removeEventListener('blur', this.stopEditing)\n    input.removeEventListener('keydown', this.blurIfEnter)\n    this.setVal(x, y, input.value)\n    td.removeChild(input)\n    this.editing = null\n    this.renderTDContent(td, x, y)\n    this.onDataChanged()\n  }\n  blurIfEnter = e => {\n    const code = e.keyCode\n    if (code === 13) {\n      // enter\n      this.stopEditing()\n      e.preventDefault()\n    }\n  }\n\n  changeSelectedCellsStyle(callback) {\n    const oldS = this.selection\n    callback()\n    this.selection = this.getSelectionCoords()\n    this.forSelectionCoord(oldS, this.restyle)\n    this.forSelectionCoord(this.selection, this.restyle)\n    if (this.options.onSelectionChange) {\n      this.options.onSelectionChange(this.selection)\n    }\n  }\n\n  getSelectionCoords() {\n    if (!this.selectionStart) return {rx: [0, 0], ry: [0, 0]}\n    let rx = [this.selectionStart.x, this.selectionEnd.x]\n    if (rx[0] > rx[1]) rx.reverse()\n    let ry = [this.selectionStart.y, this.selectionEnd.y]\n    if (ry[0] > ry[1]) ry.reverse()\n    return {rx: [rx[0], rx[1] + 1], ry: [ry[0], ry[1] + 1]}\n  }\n\n  forSelectionCoord({rx, ry}, cb) {\n    for (let x = rx[0]; x < rx[1]; x++)\n      for (let y = ry[0]; y < ry[1]; y++)\n        if (this.fitBounds({x, y}))\n          cb({x, y})\n  }\n\n  restyle = ({x, y}) => {\n\n    const status = this.getStatus(x, y)\n    const cell = this.getCell(x, y)\n\n    Object.assign(cell.style, this.TDStyle(x, y, status))\n    Object.assign(cell.firstChild.style, this.contentStyle(x, y, status))\n  }\n  TDStyle(x, y, {selected, onlySelected, editTarget, editing}) {\n\n    return {\n      padding: 0,\n      background: selected && !editing && !onlySelected ? '#d7f2f9' : '',\n      borderStyle: 'solid',\n      borderWidth: '1px',\n      borderColor: editTarget && !editing ? 'black' : (\n        [y ?  this.options.separatorColor: 'transparent', 'transparent', 'transparent',\n          x ? this.options.separatorColor : 'transparent'].join(' ')\n      ),\n      boxSizing: 'border-box',\n      ...cleanStyle(this.options.cellStyle(...arguments))\n    }\n  }\n\n  contentStyle(x, y, {selected, onlySelected, editTarget, editing}) {\n    return {\n      border: 'none',\n      padding: '10px',\n      minWidth: '100px',\n      minHeight: '40px',\n      font: 'inherit',\n      lineHeight: '20px',\n      color: 'inherit',\n      boxSizing: 'border-box',\n      ...cleanStyle(this.options.contentStyle(...arguments))\n    }\n  }\n\n\n  refreshDisplayedValue = ({x, y}) => {\n    const div = this.getCell(x, y).firstChild\n    if (div.tagName === 'DIV') {\n      div.innerText = this.getVal(x, y)\n    }\n    this.restyle({x, y})\n  }\n\n\n  getCoords(e) {\n    // Returns the clicked cell coords or null\n    let node = e.target;\n    while (!node.getAttribute('x') && node.parentElement && node.parentElement !== this.parent) {\n      node = node.parentElement\n    }\n    return {\n      x: parseInt(node.getAttribute('x')) || 0,\n      y: parseInt(node.getAttribute('y')) || 0,\n    }\n  }\n\n\n  replaceDataWithArray(data) {\n\n    data.forEach((line, y) => {\n      line.forEach((val, x) => {\n        this.setVal(x, y, val)\n      })\n    })\n\n    this.onDataChanged()\n  }\n\n  setVal(x, y, val) {\n\n    if (!this.fitBounds({x, y})) return\n\n    this.data.setVal(x, y, val)\n    this.incrementToFit({x: x + 1, y: y + 1})\n    this.refreshDisplayedValue({x, y})\n  }\n\n  getVal(x, y) {\n    return this.data.getVal(x, y)\n  }\n\n  getStatus(x, y) {\n    const {rx, ry} = this.selection\n    const selected = x >= rx[0] && x < rx[1] && y >= ry[0] && y < ry[1]\n    const editTarget = x === rx[0] && y === ry[0] && rx[0] !== rx[1]\n    const editing = this.editing && x === this.editing.x && y === this.editing.y\n    const selectedCount = (rx[1] - rx[0]) * (ry[1] - ry[0])\n    return {selected, editTarget, editing, onlySelected: selected && selectedCount < 2}\n  }\n\n  getCell(x, y) {\n    return this.tbody.children[y].children[x]\n  }\n\n}\n\nclass LooseArray {\n  // An 2D array of strings that only stores non \"\" values\n  data = {}\n\n  setVal(x, y, val) {\n    const hash = this.data\n    const cleanedVal = LooseArray.cleanVal(val)\n    if (cleanedVal) {\n      if (!hash[x]) hash[x] = {}\n      hash[x][y] = cleanedVal\n    } else {\n      // delete item\n      if (hash[x] && hash[x][y]) {\n        delete hash[x][y]\n        if (LooseArray.isEmpty(hash[x]))\n          delete hash[x]\n      }\n    }\n  }\n\n  clear() {\n    this.data = {}\n  }\n\n  getVal(x, y) {\n    const hash = this.data\n    return hash && hash[x] && hash[x][y] || ''\n  }\n\n  static cleanVal(val) {\n    if (val === 0) return '0'\n    if (!val) return ''\n    return val.toString()\n  }\n\n  static isEmpty(obj) {\n    return Object.keys(obj).length === 0\n  }\n\n  toArr() {\n    let width = 1, height = 1;\n    for (let x in this.data) {\n      for (let y in this.data[x]) {\n        height = Math.max(height, parseInt(y) + 1)\n        width = Math.max(width, parseInt(x) + 1)\n      }\n    }\n    const result = [];\n    for (let y = 0; y < height; y++) {\n      result.push([])\n      for (let x = 0; x < width; x++) {\n        result[y].push(this.getVal(x, y))\n      }\n    }\n    return result\n  }\n\n}\n\n\nfunction arrToHTML(arr) {\n  const table = document.createElement('table')\n  arr.forEach(row => {\n    const tr = document.createElement('tr')\n    table.appendChild(tr)\n    row.forEach(cell => {\n      const td = document.createElement('td')\n      tr.appendChild(td)\n      td.innerText = cell\n    })\n  })\n  return table.outerHTML\n}\n\nfunction parsePasteEvent(event) {\n  try {\n\n    const html = (event.clipboardData || window.clipboardData).getData('text/html')\n\n    const iframe = document.createElement('iframe');\n    document.body.appendChild(iframe);\n    iframe.contentWindow.document.open();\n    iframe.contentWindow.document.write(html);\n    iframe.contentWindow.document.close();\n\n    const trs = iframe.contentWindow.document.querySelectorAll('tr')\n    const data = [];\n    Array.prototype.forEach.call(trs, (tr, y) => {\n      const tds = tr.querySelectorAll('td')\n      Array.prototype.forEach.call(tds, (td, x) => {\n        const text = td.innerText;\n        if (!data[y]) data[y] = []\n        data[y][x] = text\n      })\n    })\n\n    document.body.removeChild(iframe);\n    if (data.length) return ensureDimensions(data)\n\n  } catch (e) {\n  }\n\n\n  const fromText = (event.clipboardData || window.clipboardData).getData('text')\n    .split(/\\r\\n|\\n|\\r/).map(row => row.split('\\t'))\n  return ensureDimensions(fromText)\n}\n\nfunction ensureDimensions(rows) {\n  if (!rows || !rows.length || !rows[0].length) return []\n  const width = rows[0].length\n  const height = rows.length\n  const result = []\n  for (var y = 0; y < height; y++) {\n    result.push([])\n    for (var x = 0; x < width; x++) {\n      const val = rows[y][x] || ''\n      result[y].push(val)\n    }\n  }\n  return result\n}\n\nfunction cleanStyle(s) {\n  if (!s) return {}\n  Object.keys(s).forEach(key => !s[key] && s[key] !== 0 && delete s[key]);\n  return s\n}","\nimport Importabular from '../src'\nimport './demo.css'\nnew Importabular({\n  data:[\n    ['Product ID','Product name', 'Price','Unit','Category'],\n    ['256','Sample product', '2.5','Piece','Stuffs'],\n    ['122','Pre mix drink', '5','Bottle','Drinks'],\n  ],\n  node:document.getElementById('editorNode'),\n  maxWidth:5,\n})"]}