{"version":3,"sources":["../src/index.js","demo.js"],"names":["Importabular","data","node","options","LooseArray","onChange","onSelectionChange","contentStyle","cellStyle","minHeight","maxHeight","Infinity","minWidth","maxWidth","borderSpacing","background","border","e","editing","preventDefault","rows","parsePasteEvent","selection","rx","ry","offset","x","y","forEach","row","val","setVal","changeSelectedCellsStyle","selectionStart","selectionEnd","length","onDataChanged","asArr","getSelectionAsArray","clipboardData","setData","arrToHTML","map","join","copy","setAllSelectedCellsTo","ctrlKey","key","revertEdit","stopEditing","moveCursor","shiftKey","startEditing","getCell","firstChild","value","tbody","style","userSelect","getCoords","selecting","endSelection","lastMouseUp","Date","now","lastMouseUpTarget","td","input","removeEventListener","blurIfEnter","removeChild","renderTDContent","keyCode","status","getStatus","cell","Object","assign","TDStyle","div","tagName","innerText","getVal","restyle","parent","setupDom","replaceDataWithArray","incrementToFit","toArr","clear","width","height","refreshDisplayedValue","document","createElement","setAttribute","toString","innerHTML","appendChild","table","tableStyle","tr","addCell","addEventListener","mousedown","mouseenter","mouseup","mouseleave","keydown","paste","cut","Array","prototype","call","children","fitBounds","incrementWidth","incrementHeight","result","push","destroyEditing","parentElement","forSelectionCoord","shiftSelectionEnd","curr","nc","getBoundingClientRect","editingSize","type","focus","callback","oldS","getSelectionCoords","reverse","cb","selected","onlySelected","editTarget","padding","borderStyle","borderWidth","borderColor","cleanStyle","arguments","lineHeight","fontFamily","fontSize","color","boxSizing","target","getAttribute","parseInt","line","selectedCount","hash","cleanedVal","cleanVal","isEmpty","Math","max","obj","keys","arr","outerHTML","event","html","window","getData","iframe","body","contentWindow","open","write","close","trs","querySelectorAll","tds","text","ensureDimensions","split","s","getElementById"],"mappings":"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","file":"demo.b9057e97.js","sourceRoot":"../demo","sourcesContent":["\n\n\nexport default class Importabular{\n  parent=null\n  width=1\n  height=1\n  data=new LooseArray()\n  options={\n    onChange:null,\n    onSelectionChange:null,\n    contentStyle:()=>null,\n    cellStyle:()=>null,\n    minHeight:1,\n    maxHeight:Infinity,\n    minWidth:1,\n    maxWidth:Infinity,\n  }\n  fitBounds({x,y}){\n    return x>=0 && x<this.options.maxWidth\n    && y>=0 && y<this.options.maxHeight\n  }\n  constructor({data=[],node, ...options}) {\n    this.parent=node\n    Object.assign(this.options, options)\n    this.setupDom()\n    this.replaceDataWithArray(data)\n    this.incrementToFit({x:this.options.minWidth-1, y:this.options.minHeight-1})\n  }\n  onDataChanged(){\n    if(this.options.onChange){\n      this.options.onChange(this.data.toArr())\n    }\n  }\n  setData(data){\n    this.data.clear()\n    data.forEach((row,y)=>\n      row.forEach((val,x)=>\n        this.setVal(x,y,val)\n      ))\n    for(let x=0;x<this.width;x++)\n      for(let y=0;y<this.height;y++)\n        this.refreshDisplayedValue({x,y})\n\n  }\n  renderTDContent(td, x,y){\n    const div=document.createElement('div')\n    td.setAttribute('x',x.toString())\n    td.setAttribute('y',y.toString())\n    const val=this.getVal( x,y)\n    if(val){\n      div.innerText=val;\n    }else{\n      // Force no collapse of cell\n      div.innerHTML='&nbsp;'\n    }\n    td.appendChild(div)\n    this.restyle({x,y})\n\n  }\n  tableStyle={\n    borderSpacing:0,\n    background:'white',\n    border:'1px solid #ddd'\n\n  }\n  setupDom(){\n    const table=document.createElement('table')\n    const tbody=document.createElement('tbody')\n    Object.assign(table.style,this.tableStyle)\n\n\n    table.appendChild(tbody)\n    this.parent.appendChild(table)\n    this.tbody=tbody\n    this.table=table\n\n    for(let y=0;y<this.height;y++){\n      const tr=document.createElement('tr')\n      tbody.appendChild(tr)\n      for(let x=0;x<this.width;x++){\n        this.addCell(tr,x,y)\n      }\n    }\n\n    tbody.addEventListener('mousedown', this.mousedown, true)\n    tbody.addEventListener('mouseenter', this.mouseenter, true)\n    tbody.addEventListener('mouseup', this.mouseup, true)\n    tbody.addEventListener('mouseleave', this.mouseleave)\n    document.addEventListener('keydown', this.keydown, true)\n    document.addEventListener('paste', this.paste)\n    document.addEventListener('cut', this.cut)\n    document.addEventListener('copy', this.copy)\n  }\n\n  addCell(tr, x,y){\n    const td=document.createElement('td')\n    tr.appendChild(td)\n    this.renderTDContent(td,x,y)\n  }\n\n  incrementHeight(){\n\n    this.height++\n    const y=this.height-1\n    const tr=document.createElement('tr')\n\n    this.tbody.appendChild(tr)\n    for(let x=0;x<this.width;x++){\n      this.addCell(tr, x,y)\n    }\n  }\n\n  incrementWidth(){\n\n    this.width++\n    const x=this.width-1\n    Array.prototype.forEach.call(this.tbody.children, (tr,y)=>{\n      this.addCell(tr, x,y)\n    })\n  }\n  incrementToFit({x,y}){\n    if(!this.fitBounds({x,y})) return\n    while(x>this.width-1) this.incrementWidth()\n    while(y>this.height-1) this.incrementHeight()\n  }\n  paste=e=>{\n    if(this.editing) return\n    e.preventDefault();\n    const rows=parsePasteEvent(e)\n    const {rx,ry}= this.selection\n    const offset={x:rx[0], y:ry[0]}\n\n    rows.forEach((row, y)=>{\n      row.forEach((val, x)=>{\n        this.setVal(offset.x+x, offset.y+y, val)\n      })\n    })\n\n    this.changeSelectedCellsStyle(()=>{\n      this.selectionStart=offset\n      this.selectionEnd ={\n        x:offset.x+rows[0].length-1,\n        y:offset.y+rows.length-1\n      }\n    })\n    this.onDataChanged()\n  }\n  getSelectionAsArray(){\n    const {rx,ry}=this.selection\n    if(rx[0]===rx[1]) return null\n    const width=rx[1]-rx[0]\n    const height=ry[1]-ry[0]\n    const result=[]\n    for(let y=0;y<height;y++){\n      result.push([])\n      for(let x=0;x<width;x++){\n        result[y].push(this.getVal(rx[0]+x, ry[0]+y))\n      }\n    }\n    return result\n  }\n  copy=e=>{\n    const asArr=this.getSelectionAsArray()\n    if(asArr){\n      e.preventDefault()\n      e.clipboardData.setData('text/html', arrToHTML(asArr));\n      e.clipboardData.setData('text/plain', asArr.map(row=>row.join('\\t')).join('\\n'));\n    }\n  }\n\n  cut=e=>{\n    this.copy(e)\n    this.setAllSelectedCellsTo('')\n  }\n  destroy(){\n    this.destroyEditing()\n\n    // Remove global listeners\n    const tbody=this.tbody\n    tbody.removeEventListener('mousedown', this.mousedown, true)\n    tbody.removeEventListener('mouseenter', this.mouseenter, true)\n    tbody.removeEventListener('mouseup', this.mouseup, true)\n    tbody.removeEventListener('mouseleave', this.mouseleave)\n    document.removeEventListener('keydown', this.keydown, true)\n    document.removeEventListener('copy', this.copy)\n    document.removeEventListener('cut', this.cut)\n    document.removeEventListener('paste', this.paste)\n\n    this.table.parentElement.removeChild(this.table)\n  }\n\n  keydown=e=>{\n\n    if(e.ctrlKey) return\n\n    if(this.selectionStart){\n      if(e.key==='Escape' && this.editing){\n        e.preventDefault()\n        this.revertEdit()\n        this.stopEditing()\n      }\n      if(e.key==='Enter'){\n        e.preventDefault()\n        this.moveCursor({y:1})\n      }\n\n      if(e.key==='Tab'){\n        e.preventDefault()\n        this.moveCursor({x:e.shiftKey?-1:1})\n      }\n      if(!this.editing){\n\n        if(e.key==='Delete' || e.key==='Backspace'){\n          e.preventDefault()\n          this.setAllSelectedCellsTo('')\n        }\n        if(e.key==='ArrowDown'){\n          e.preventDefault()\n          this.moveCursor({y:1},e.shiftKey)\n        }\n\n        if(e.key==='ArrowUp'){\n          e.preventDefault()\n          this.moveCursor({y:-1},e.shiftKey)\n        }\n        if(e.key==='ArrowLeft'){\n          e.preventDefault()\n          this.moveCursor({x:-1},e.shiftKey)\n        }\n        if(e.key==='ArrowRight'){\n          e.preventDefault()\n          this.moveCursor({x:+1},e.shiftKey)\n        }\n      }\n\n\n      if(e.key.length === 1 && !this.editing){\n        this.changeSelectedCellsStyle(()=>{\n          const {x,y}=this.selectionStart\n          // We clear the value of the cell, and the keyup event will\n          // happen with the cursor inside the cell and type the character there\n          this.startEditing({x,y})\n          this.getCell(x,y).firstChild.value=''\n        })\n      }\n    }\n  }\n  setAllSelectedCellsTo(value){\n    this.forSelectionCoord(this.selection,({x,y})=>this.setVal(x,y,value))\n    this.forSelectionCoord(this.selection,this.refreshDisplayedValue)\n\n    this.onDataChanged()\n  }\n  moveCursor({x=0,y=0}, shiftSelectionEnd){\n\n    const curr=shiftSelectionEnd? this.selectionEnd : this.selectionStart\n    const nc = {x:curr.x+x, y:curr.y+y}\n\n    if(!this.fitBounds(nc)) return\n\n    this.stopEditing()\n\n\n    this.incrementToFit(nc)\n    // if(nc.x>=this.width) return;\n    // if(nc.y>=this.height) return;\n    this.changeSelectedCellsStyle(()=>{\n      if(shiftSelectionEnd){\n        this.selectionEnd =nc\n      }else{\n        this.selectionStart=this.selectionEnd =nc\n      }\n    })\n  }\n  selecting=false;\n  selectionStart=null\n  selectionEnd=null\n  selection={rx:[0,0],ry:[0,0]}\n  editing=null\n\n  mousedown=e=>{\n    this.changeSelectedCellsStyle(()=>{\n      this.tbody.style.userSelect='none'\n      this.selectionStart=this.getCoords(e);\n      this.selectionEnd=this.selectionStart\n      this.selecting=true;\n    })\n  }\n  mouseenter=e=>{\n    if(this.selecting){\n      this.changeSelectedCellsStyle(()=>{\n        this.selectionEnd=this.getCoords(e);\n      })\n    }\n  }\n\n  lastMouseUp=null\n  lastMouseUpTarget=null\n  endSelection(){\n    this.selecting=false;\n    this.tbody.style.userSelect=''\n  }\n  mouseup=e=>{\n    if(this.selecting){\n      this.changeSelectedCellsStyle(()=>{\n        this.selectionEnd=this.getCoords(e);\n        this.endSelection()\n\n        if(this.lastMouseUp &&\n          this.lastMouseUp>Date.now()-300 &&\n          this.lastMouseUpTarget.x===this.selectionEnd.x &&\n          this.lastMouseUpTarget.y===this.selectionEnd.y\n        ){\n          this.startEditing(this.selectionEnd)\n        }\n        this.lastMouseUp=Date.now()\n        this.lastMouseUpTarget=this.selectionEnd\n      })\n    }\n  }\n  mouseleave=e=>{\n    if(this.selecting){\n      this.endSelection()\n    }\n  }\n  startEditing({x,y}){\n\n    this.editing={x,y}\n    const td=this.getCell(x,y)\n    const {width,height}=td.firstChild.getBoundingClientRect()\n    this.editingSize={width,height}\n    td.removeChild(td.firstChild)\n    const input=document.createElement('input');\n    input.type='text'\n    input.value=this.getVal(x,y)\n    td.appendChild(input)\n    input.focus()\n    input.addEventListener('blur', this.stopEditing)\n    input.addEventListener('keydown', this.blurIfEnter)\n  }\n\n  destroyEditing(){\n    if(this.editing){\n      const {x,y}=this.editing\n      const input=this.getCell(x,y).firstChild\n      input.removeEventListener('blur', this.stopEditing)\n      input.removeEventListener('keydown', this.blurIfEnter)\n    }\n  }\n  revertEdit(){\n    if(!this.editing) return\n    const {x,y}=this.editing\n    const td=this.getCell(x,y)\n    const input = td.firstChild\n    input.value=this.getVal(x,y)\n  }\n  stopEditing=()=>{\n    if(!this.editing) return\n    const {x,y}=this.editing\n    const td=this.getCell(x,y)\n    const input = td.firstChild\n    input.removeEventListener('blur', this.stopEditing)\n    input.removeEventListener('keydown', this.blurIfEnter)\n    this.setVal(x,y,input.value)\n    td.removeChild(input)\n    this.editing=null\n    this.renderTDContent(td, x,y)\n    this.onDataChanged()\n  }\n  blurIfEnter=e=>{\n    const code=e.keyCode\n    if(code===13){\n      // enter\n      this.stopEditing()\n      e.preventDefault()\n    }\n  }\n  changeSelectedCellsStyle(callback){\n    const oldS=this.selection\n    callback()\n    this.selection=this.getSelectionCoords()\n    this.forSelectionCoord(oldS,this.restyle)\n    this.forSelectionCoord(this.selection,this.restyle)\n    if(this.options.onSelectionChange){\n      this.options.onSelectionChange(this.selection)\n    }\n  }\n  getSelectionCoords(){\n    if(!this.selectionStart) return {rx:[0,0], ry:[0,0]}\n    let rx=[this.selectionStart.x,this.selectionEnd.x]\n    if(rx[0]>rx[1]) rx.reverse()\n    let ry=[this.selectionStart.y,this.selectionEnd.y]\n    if(ry[0]>ry[1]) ry.reverse()\n    return {rx:[rx[0],rx[1]+1],ry:[ry[0],ry[1]+1]}\n  }\n  forSelectionCoord({rx,ry}, cb){\n    for(let x=rx[0];x<rx[1];x++)\n      for(let y=ry[0];y<ry[1];y++)\n        if(this.fitBounds({x,y}))\n          cb({x,y})\n  }\n  restyle=({x,y})=>{\n\n    const status =this.getStatus(x,y)\n    const cell=this.getCell(x,y)\n\n    Object.assign(cell.style, this.TDStyle(x,y,status))\n    Object.assign(cell.firstChild.style, this.contentStyle(x,y,status))\n  }\n\n  TDStyle(x,y,{selected,onlySelected, editTarget,editing}){\n\n    return {\n      padding:0,\n      background:selected && !editing && !onlySelected?'#d7f2f9':'',\n      borderStyle:'solid',\n      borderWidth:'1px',\n      borderColor:editTarget && !editing ? 'black' : (\n        [y ? '#ddd':'transparent','transparent','transparent',\n          x ? '#ddd':'transparent'].join(' ')\n      ),\n      ...cleanStyle(this.options.cellStyle(...arguments))\n    }\n  }\n  contentStyle(x,y,{selected,onlySelected, editTarget,editing}){\n    return {\n      border:'none',\n      padding:'0 10px',\n      minWidth:'100px',\n      minHeight:'40px',\n      lineHeight:'40px',\n      width:editing?this.editingSize.width+'px':'',\n      height:editing?this.editingSize.height+'px':'',\n      fontFamily:'inherit',\n      fontSize:'inherit',\n      color:'inherit',\n      boxSizing:'border-box',\n      ...cleanStyle(this.options.contentStyle(...arguments))\n    }\n  }\n\n\n  refreshDisplayedValue=({x,y})=>{\n    const div=this.getCell(x,y).firstChild\n    if(div.tagName==='DIV'){\n      div.innerText=this.getVal(x,y)\n    }\n    this.restyle({x,y})\n  }\n\n\n  getCoords(e){\n    // Returns the clicked cell coords or null\n    let node=e.target;\n    while (!node.getAttribute('x') && node.parentElement && node.parentElement!==this.parent){\n      node=node.parentElement\n    }\n    return {\n      x:parseInt(node.getAttribute('x')) || 0,\n      y:parseInt(node.getAttribute('y')) || 0,\n    }\n  }\n\n\n  replaceDataWithArray(data) {\n\n    data.forEach((line, y)=>{\n      line.forEach((val, x)=>{\n        this.setVal( x,y, val)\n      })\n    })\n\n    this.onDataChanged()\n  }\n  setVal( x,y,val){\n\n    if(!this.fitBounds({x,y})) return\n\n    this.data.setVal( x,y, val)\n    this.incrementToFit({x:x+1,y:y+1})\n    this.refreshDisplayedValue({x,y})\n  }\n\n  getVal(x,y) {\n    return this.data.getVal(x,y)\n  }\n  getStatus(x,y){\n    const {rx,ry} = this.selection\n    const selected = x>=rx[0] && x<rx[1] && y>=ry[0] && y<ry[1]\n    const editTarget = x===rx[0] && y===ry[0] && rx[0]!==rx[1]\n    const editing= this.editing && x===this.editing.x &&  y===this.editing.y\n    const selectedCount = (rx[1]-rx[0])*(ry[1]-ry[0])\n    return {selected,editTarget,editing, onlySelected:selected && selectedCount<2}\n  }\n  getCell(x,y){\n    return this.tbody.children[y].children[x]\n  }\n\n}\n\nclass LooseArray{\n  // An 2D array of strings that only stores non \"\" values\n  data={}\n  setVal( x,y,val){\n    const hash=this.data\n    const cleanedVal=LooseArray.cleanVal(val)\n    if(cleanedVal){\n      if(!hash[x])hash[x]={}\n      hash[x][y] = cleanedVal\n    }else{\n      // delete item\n      if(hash[x] && hash[x][y]){\n        delete hash[x][y]\n        if(LooseArray.isEmpty(hash[x]))\n          delete hash[x]\n      }\n    }\n  }\n  clear(){\n    this.data={}\n  }\n  getVal(x,y) {\n    const hash=this.data\n    return hash && hash[x] && hash[x][y] || ''\n  }\n  static cleanVal(val){\n    if(val === 0) return '0'\n    if(!val) return ''\n    return val.toString()\n  }\n  static isEmpty(obj) {\n    return Object.keys(obj).length === 0\n  }\n  toArr(){\n    let width=1, height=1;\n    for(let x in this.data){\n      for(let y in this.data[x]){\n        height=Math.max(height, parseInt(y)+1)\n        width=Math.max(width, parseInt(x)+1)\n      }\n    }\n    const result=[];\n    for(let y = 0; y<height;y++){\n      result.push([])\n      for(let x = 0; x<width; x++){\n        result[y].push(this.getVal(x,y))\n      }\n    }\n    return result\n  }\n\n}\n\n\n\nfunction arrToHTML(arr) {\n  const table=document.createElement('table')\n  arr.forEach(row=>{\n    const tr=document.createElement('tr')\n    table.appendChild(tr)\n    row.forEach(cell=>{\n      const td=document.createElement('td')\n      tr.appendChild(td)\n      td.innerText=cell\n    })\n  })\n  return table.outerHTML\n}\nfunction parsePasteEvent(event) {\n  try{\n\n    const html = (event.clipboardData || window.clipboardData).getData('text/html')\n\n    const iframe = document.createElement('iframe');\n    document.body.appendChild(iframe);\n    iframe.contentWindow.document.open();\n    iframe.contentWindow.document.write(html);\n    iframe.contentWindow.document.close();\n\n    const trs=iframe.contentWindow.document.querySelectorAll('tr')\n    const data=[];\n    Array.prototype.forEach.call(trs, (tr, y)=>{\n      const tds=tr.querySelectorAll('td')\n      Array.prototype.forEach.call(tds, (td, x)=>{\n        const text=td.innerText;\n        if(!data[y]) data[y]=[]\n        data[y][x]=text\n      })\n    })\n\n    document.body.removeChild(iframe);\n    if(data.length) return ensureDimensions(data)\n\n  }catch (e) {\n  }\n\n\n  const fromText= (event.clipboardData || window.clipboardData).getData('text')\n    .split(/\\r\\n|\\n|\\r/).map(row => row.split('\\t'))\n  return ensureDimensions(fromText)\n}\n\nfunction ensureDimensions(rows) {\n  if(!rows || !rows.length || !rows[0].length) return []\n  const width=rows[0].length\n  const height=rows.length\n  const result = []\n  for(var y=0;y<height;y++){\n    result.push([])\n    for(var x=0;x<width;x++){\n      const val = rows[y][x] || ''\n      result[y].push(val)\n    }\n  }\n  return result\n}\n\nfunction cleanStyle(s) {\n  if(!s) return {}\n  Object.keys(s).forEach(key => !s[key] && s[key]!==0 && delete s[key]);\n  return s\n}","\nimport Importabular from '../src'\nimport './demo.css'\nnew Importabular({\n  data:[\n    ['Product ID','Product name', 'Price','Unit','Category'],\n    ['256','Sample product', '2.5','Piece','Stuffs'],\n    ['122','Pre mix drink', '5','Bottle','Drinks'],\n  ],\n  node:document.getElementById('editorNode'),\n  maxWidth:5,\n  minHeight:8\n})"]}